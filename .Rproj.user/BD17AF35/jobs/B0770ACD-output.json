[1,"** Installing R Package Dependencies for R Markdown: 'knitr', 'markdown', 'mime', 'rmarkdown', 'stringi', 'stringr', 'yaml'\n"]
[1,"[1/12] Installing stringi...\n"]
[1,"Retrieving 'https://cloud.r-project.org/src/contrib/stringi_1.7.8.tar.gz' ...\n"]
[1,"\tOK [file is up to date]\n"]
[1,"Installing stringi [1.7.8] ...\n"]
[1,"\tFAILED\n"]
[1,"Error installing package 'stringi':\n"]
[1,"===================================\n"]
[1,"* installing *source* package ‘stringi’ ...\n"]
[1,"** package ‘stringi’ successfully unpacked and MD5 sums checked\n"]
[1,"** using staged installation\n"]
[1,"checking for R_HOME... /usr/lib/R\n"]
[1,"checking for R... /usr/lib/R/bin/R\n"]
[1,"checking for endianness... little\n"]
[1,"checking for R >= 3.1.0 for C++11 use... yes\n"]
[1,"checking for R < 3.4.0 for CXX1X flag use... no\n"]
[1,"checking for cat... /usr/bin/cat\n"]
[1,"checking for local ICUDT_DIR... icu69/data\n"]
[1,"checking for gcc... gcc\n"]
[1,"checking whether the C compiler works... yes\n"]
[1,"checking for C compiler default output file name... a.out\n"]
[1,"checking for suffix of executables... \n"]
[1,"checking whether we are cross compiling... no\n"]
[1,"checking for suffix of object files... o\n"]
[1,"checking whether we are using the GNU C compiler... yes\n"]
[1,"checking whether gcc accepts -g... yes\n"]
[1,"checking for gcc option to accept ISO C89... none needed\n"]
[1,"checking how to run the C preprocessor... gcc -E\n"]
[1,"checking for grep that handles long lines and -e... /usr/bin/grep\n"]
[1,"checking for egrep... /usr/bin/grep -E\n"]
[1,"checking for ANSI C header files... yes\n"]
[1,"checking for sys/types.h... yes\n"]
[1,"checking for sys/stat.h... yes\n"]
[1,"checking for stdlib.h... yes\n"]
[1,"checking for string.h... yes\n"]
[1,"checking for memory.h... yes\n"]
[1,"checking for strings.h... yes\n"]
[1,"checking for inttypes.h... yes\n"]
[1,"checking for stdint.h... yes\n"]
[1,"checking for unistd.h... yes\n"]
[1,"checking elf.h usability... yes\n"]
[1,"checking elf.h presence... yes\n"]
[1,"checking for elf.h... yes\n"]
[1,"checking whether we are using the GNU C++ compiler... yes\n"]
[1,"checking whether g++ -std=gnu++11 accepts -g... yes\n"]
[1,"checking whether the C++ compiler supports the long long type... yes\n"]
[1,"checking whether the compiler implements namespaces... yes\n"]
[1,"checking whether the compiler supports the Standard Template Library... yes\n"]
[1,"checking whether std::map is available... yes\n"]
[1,"checking for pkg-config... /usr/bin/pkg-config\n"]
[1,"checking with pkg-config for the system ICU4C... no\n"]
[1,"*** pkg-config did not detect ICU4C-devel libraries installed\n"]
[1,"*** Trying with 'standard' fallback flags\n"]
[1,"checking whether an ICU4C-based project can be built... no\n"]
[1,"*** This version of ICU4C cannot be used.\n"]
[1,"*** Using the ICU 69 bundle.\n"]
[1,"checking whether we may compile src/icu69/common/putil.cpp... yes\n"]
[1,"checking whether we may compile src/icu69/i18n/number_affixutils.cpp... yes\n"]
[1,"checking whether alignof(std::max_align_t) is available... yes\n"]
[1,"checking whether the ICU data library can be downloaded... downloading the ICU data library (icudt)\n"]
[1,"output path: icu69/data/icu4c-69_1-data-bin-l.zip\n"]
[1,"trying URL 'https://raw.githubusercontent.com/gagolews/stringi/master/src/icu69/data/icu4c-69_1-data-bin-l.zip'\n"]
[1,"Error in download.file(paste(href, fname, sep = \"\"), icudtzipfname, mode = \"wb\"): cannot open URL 'https://raw.githubusercontent.com/gagolews/stringi/master/src/icu69/data/icu4c-69_1-data-bin-l.zip'\n"]
[1,"trying URL 'http://raw.githubusercontent.com/gagolews/stringi/master/src/icu69/data/icu4c-69_1-data-bin-l.zip'\n"]
[1,"Error in download.file(paste(href, fname, sep = \"\"), icudtzipfname, mode = \"wb\"): cannot open URL 'http://raw.githubusercontent.com/gagolews/stringi/master/src/icu69/data/icu4c-69_1-data-bin-l.zip'\n"]
[1,"icudt download failed\n"]
[1,"Error: Stopping on error\n"]
[1,"In addition: Warning messages:\n"]
[1,"1: In download.file(paste(href, fname, sep = \"\"), icudtzipfname, mode = \"wb\") :\n"]
[1,"  URL 'https://raw.githubusercontent.com/gagolews/stringi/master/src/icu69/data/icu4c-69_1-data-bin-l.zip': status was 'Couldn't connect to server'\n"]
[1,"2: In download.file(paste(href, fname, sep = \"\"), icudtzipfname, mode = \"wb\") :\n"]
[1,"  cannot open URL 'http://raw.githubusercontent.com/gagolews/stringi/master/src/icu69/data/icu4c-69_1-data-bin-l.zip': HTTP status was '502 Bad Gateway'\n"]
[1,"Execution halted\n"]
[1,"*** *********************************************************************\n"]
[1,"*** stringi cannot be built.\n"]
[1,"*** Failed to download the ICU data library (icudt). Stopping now.\n"]
[1,"*** For build environments that have no internet access,\n"]
[1,"*** see the INSTALL file for a workaround.\n"]
[1,"*** *********************************************************************\n"]
[1,"ERROR: configuration failed for package ‘stringi’\n"]
[1,"* removing ‘/home/chentianhao/Desktop/2023_spring/clinical_proj/clinical_analysis/renv/staging/3/stringi’\n"]
[2,"Error: install of package 'stringi' failed [error code 1]\nTraceback (most recent calls last):\n14: sourceWithProgress(script = \"/tmp/53d1-07b5-a81f-ca47\", encoding = \"UTF-8\", \n        con = stdout(), importRdata = NULL, exportRdata = NULL)\n13: eval(statements[[idx]], envir = sourceEnv)\n12: eval(statements[[idx]], envir = sourceEnv)\n11: renv::install(\"stringi\")\n10: renv_install_impl(records)\n 9: renv_install_staged(records)\n 8: renv_install_default(records)\n 7: handler(package, renv_install_package(record))\n 6: renv_install_package(record)\n 5: withCallingHandlers(renv_install_package_impl(record), error = function(e) {\n        vwritef(\"\\tFAILED\")\n        writef(e$output)\n    })\n 4: renv_install_package_impl(record)\n 3: r_cmd_install(package, path)\n 2: r_exec_error(package, output, \"install\", status)\n 1: stop(error)\nExecution halted\n"]
